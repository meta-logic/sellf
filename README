I) Requirements:

These tools must be installed for 'sellf' to work.
- ocaml (http://caml.inria.fr/)
- dlv (http://www.dlvsystem.com/dlv/)

NOTE: The system was implemented and tested in Linux/Ubuntu. It was also
installed and executed succesfully on MacOS. Other operating systems were not
yet tried.

II) Installation:

Execute the installation script:

./install.sh

It will create a binary called 'sellf' in the current directory. To start the
program, execute this binary.

III) Syntax

The operators of linear logic with subexponentials and its syntax are:

tensor -> *
plus   -> +
with   -> &
par    -> |
!l     -> [l]bang
?l     -> [l]?
one    -> one
zero   -> zero
top    -> top
bottom -> bot

To comment some line in your file, start it with the symbol '%'.
Signature files have sufix '.sig' and the program file has sufix '.pl' (both
must have the same name).

IV) Running:

After compilation, an executable file called 'sellf' will be created in the
current folder. To execute it, just type:

./sellf

and press enter. A command line prompt will appear with the symbol ':>'. For a
list of commands available, you can type '#help'. Here I will only go through a
small example so that you can understand quickly how the system works.

Some example specifications can be found inside the 'examples/proofsystems'
folder. If you open the file 'g1m.pl' you can see the specification of linear
logic (without subexponentials). A specification rule has the following form:

(not (lft (imp A B))) * (([l]bang ([r]? (rght A))) * ([l]? (lft B))).

This is exactly as it was specified in the paper "An Extended Framework for
Specifying and Reasoning about Proof Systems" by Vivek Nigam, Elaine Pimentel
and Giselle Reis. Some buit-in elements for the specification of systems are:

- 'form' as the type of formulas of the object logic
- 'term' as the type of terms of the object logic
- atomic predicates 'rght' and 'lft' of type form -> o

A specification can be built of formulas using these operators and the
predicates 'rght' or 'lft' that atomizes formulas of the object logic. They are
also divided in four sections which are identified by the keywords: 'rules
introduction', 'rules axiom', 'rules cut' and 'rules structural'.

To load the file 'g1m.pl' of the examples folder, run 'sellf' as expalined above
and type:

#load ../examples/proofsystems/g1m

Then, the system will display a '?>' symbol indicating that the file is loaded.
The commands available at this point can be seen using the command '#help'. 

